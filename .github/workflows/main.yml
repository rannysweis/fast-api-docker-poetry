name: Run tests

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker image
        id: cache
        uses: actions/cache@v2
        with:
          path: /var/lib/docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and push Docker image
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          docker buildx create --use
          echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
          docker buildx build --push -t $DOCKER_USER/fast-api-server:latest .
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Build and run containers
        run: |
          docker-compose up -d

      - name: Run tests
        run: |
          docker-compose run --rm fast-api-docker-poetry poetry run pytest -v --durations=10 --durations-min=0.5
